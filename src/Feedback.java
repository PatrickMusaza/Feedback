
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Feedback extends javax.swing.JFrame {

    PreparedStatement insert;

    MasterClass master = new MasterClass();

    /**
     * Creates new form Feedback
     */
    public Feedback() {
        initComponents();
        Image logo = new ImageIcon(this.getClass().getResource("/feedback.png")).getImage();
        this.setIconImage(logo);
        generateCommentCode();
        table_update();
    }

    public String generateCommentCode() {
        String Code = "";
        try {
            Connection con = Connect.getConnection();
            if (con != null) {
                PreparedStatement statement = con.prepareStatement("SELECT COUNT(id) FROM feedback");
                ResultSet result = statement.executeQuery();
                if (result.next()) {
                    int count = result.getInt(1);
                    Code = "CMT " + (1000 + count + 1);
                    ID.setText(Code);
                }
            }
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        return Code;
    }

    private void table_update() {

        int count;

        try {
            Connection con = Connect.getConnection();

            insert = con.prepareStatement("select * from feedback");

            ResultSet rs = insert.executeQuery();
            ResultSetMetaData rsmd = (ResultSetMetaData) rs.getMetaData();
            count = rsmd.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
            Df.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();

                NumberFormat formatter = NumberFormat.getInstance();

                for (int i = 1; i <= count; i++) {

                    v2.add(rs.getString("ID"));
                    v2.add(rs.getString("FirstName"));
                    v2.add(rs.getString("LastName"));
                    v2.add(rs.getString("Gender"));
                    v2.add(rs.getString("Email"));

                }

                Df.addRow(v2);
            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        LName = new javax.swing.JTextField();
        ID = new javax.swing.JTextField();
        Email = new javax.swing.JTextField();
        FName = new javax.swing.JTextField();
        Gender = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Comment = new javax.swing.JTextArea();
        Save = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        RESULT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FEEDBACK PAGE");

        jTable1.setBackground(new java.awt.Color(204, 204, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {

                },
                new String[] {
                        "ID", "First Name", "Last Name", "Gender", "Email"
                }) {
            Class[] types = new Class[] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class
            };
            boolean[] canEdit = new boolean[] {
                    false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        jLabel1.setFont(new java.awt.Font("DejaVu Serif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("FEEDBACK FORM");

        jLabel2.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID");

        jLabel3.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("First Name");

        jLabel4.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Last Name");

        jLabel5.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Email");

        jLabel6.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Gender");

        LName.setBackground(new java.awt.Color(102, 102, 102));
        LName.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        LName.setForeground(new java.awt.Color(255, 255, 255));
        LName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LNameActionPerformed(evt);
            }
        });

        ID.setEditable(false);
        ID.setBackground(new java.awt.Color(102, 102, 102));
        ID.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        ID.setForeground(new java.awt.Color(255, 255, 255));
        ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDActionPerformed(evt);
            }
        });

        Email.setBackground(new java.awt.Color(102, 102, 102));
        Email.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        Email.setForeground(new java.awt.Color(255, 255, 255));
        Email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailActionPerformed(evt);
            }
        });
        Email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                EmailKeyTyped(evt);
            }
        });

        FName.setBackground(new java.awt.Color(102, 102, 102));
        FName.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        FName.setForeground(new java.awt.Color(255, 255, 255));
        FName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FNameActionPerformed(evt);
            }
        });

        Gender.setBackground(new java.awt.Color(102, 102, 102));
        Gender.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        Gender.setForeground(new java.awt.Color(255, 255, 255));
        Gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        jLabel7.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Comment");

        Comment.setBackground(new java.awt.Color(102, 102, 102));
        Comment.setColumns(20);
        Comment.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        Comment.setForeground(new java.awt.Color(255, 255, 255));
        Comment.setRows(5);
        jScrollPane2.setViewportView(Comment);

        Save.setBackground(new java.awt.Color(0, 204, 204));
        Save.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        Save.setForeground(new java.awt.Color(255, 255, 255));
        Save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        Save.setText("SAVE");
        Save.setEnabled(false);
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Clear.setBackground(new java.awt.Color(0, 255, 102));
        Clear.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        Clear.setForeground(new java.awt.Color(255, 255, 255));
        Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/refresh.png"))); // NOI18N
        Clear.setActionCommand("CLEAR");
        Clear.setLabel("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        Delete.setBackground(new java.awt.Color(255, 51, 51));
        Delete.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        Delete.setForeground(new java.awt.Color(255, 255, 255));
        Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete1.png"))); // NOI18N
        Delete.setText("DELETE");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        RESULT.setBackground(new java.awt.Color(0, 0, 0));
        RESULT.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 14)); // NOI18N
        RESULT.setForeground(new java.awt.Color(255, 255, 255));
        RESULT.setText("RESULT PAGE");
        RESULT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RESULTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 367,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7))
                                .addGap(52, 52, 52)
                                .addGroup(jPanel1Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(ID)
                                        .addComponent(FName)
                                        .addComponent(LName)
                                        .addComponent(Email)
                                        .addComponent(Gender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65,
                                        Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(RESULT, javax.swing.GroupLayout.PREFERRED_SIZE, 145,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(Delete, javax.swing.GroupLayout.Alignment.TRAILING,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Clear, javax.swing.GroupLayout.Alignment.TRAILING,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Save, javax.swing.GroupLayout.Alignment.TRAILING,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 132,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(13, 13, 13)));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel2)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel3))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(ID,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(FName,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(LName, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel4))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel5)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(Save)
                                                .addGap(18, 18, 18)
                                                .addComponent(Clear)
                                                .addGap(18, 18, 18)
                                                .addComponent(Delete)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(Gender, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 71,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(RESULT, javax.swing.GroupLayout.PREFERRED_SIZE, 49,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)));

        Clear.getAccessibleContext().setAccessibleName("CLEAR");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                                .addGap(0, 0, 0)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void RESULTActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_RESULTActionPerformed
        // TODO add your handling code here:

        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a comment to view the result!", "Error",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            String id = ID.getText();
            String F_Name = FName.getText();
            String L_Name = LName.getText();
            String E_mail = Email.getText();
            String comment = Comment.getText();
            String gen = Gender.getSelectedItem().toString();

            this.setVisible(false);
            ResultPage rp = new ResultPage(id, F_Name, L_Name, E_mail, gen, comment);
            rp.setVisible(true);
        }

    }// GEN-LAST:event_RESULTActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:

        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        int modelIndex = jTable1.convertRowIndexToModel(selectedIndex);

        ID.setText(Df.getValueAt(modelIndex, 0).toString());
        FName.setText(Df.getValueAt(modelIndex, 1).toString());
        LName.setText(Df.getValueAt(modelIndex, 2).toString());
        Email.setText(Df.getValueAt(modelIndex, 4).toString());

        String gen = Df.getValueAt(modelIndex, 3).toString();
        Gender.setSelectedItem(gen);

        PreparedStatement select;

        try {

            String Code = ID.getText();

            Connection con = Connect.getConnection();

            select = con.prepareStatement("SELECT Comment FROM feedback WHERE id = ?");
            select.setString(1, Code);

            ResultSet rs = select.executeQuery();

            if (rs.next()) {

                String cmt = rs.getString("Comment");
                Comment.setText(cmt);

            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }// GEN-LAST:event_jTable1MouseClicked

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:

        ID.setText("");
        FName.setText("");
        LName.setText("");
        Email.setText("");
        Comment.setText("");
        Gender.setSelectedIndex(0);

        generateCommentCode();

    }// GEN-LAST:event_ClearActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:

        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

        try {

            int confirm = JOptionPane.showConfirmDialog(null, "Do you want to delete this comment", "Warning",
                    JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {

                String id = (Df.getValueAt(selectedIndex, 0).toString());

                Connection con = Connect.getConnection();

                insert = con.prepareStatement("delete from feedback where id=?");
                insert.setString(1, id);

                insert.executeUpdate();

                JOptionPane.showMessageDialog(this, "Comment Deleted Successfully!");
                table_update();
                generateCommentCode();

            }

        } catch (SQLException ex) {

            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        // JOptionPane.showMessageDialog(this, "Comment wasn't selected yet!", "Error",
        // JOptionPane.ERROR_MESSAGE);
    }// GEN-LAST:event_DeleteActionPerformed

    private void EmailKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_EmailKeyTyped
        // TODO add your handling code here:
        if (master.checkEmail(Email.getText())) {
            Save.setEnabled(true);
        }
    }// GEN-LAST:event_EmailKeyTyped

    private void LNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_LNameActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_LNameActionPerformed

    private void IDActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_IDActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_IDActionPerformed

    private void EmailActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_EmailActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_EmailActionPerformed

    private void FNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_FNameActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_FNameActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:

        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow < 0) {

            String input1 = ID.getText().trim();
            String input2 = FName.getText().trim();
            String input3 = LName.getText().trim();
            String input4 = Email.getText().trim();
            String input5 = Gender.getSelectedItem().toString().trim();
            String input6 = Comment.getText().trim();
            if (input1.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter ID.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (input2.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Your First Name.", "Error",
                        JOptionPane.ERROR_MESSAGE);
            } else if (input3.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Your Last Name.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (input4.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Your Email.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (input5.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Your Gender.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (input6.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Your Comment.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!master.checkEmail(input4)) {
                JOptionPane.showMessageDialog(null, "Please Enter a Valid Email.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!((master.getStringLength(input6)) <= 100 && (master.getStringLength(input6)) >= 50)) {
                JOptionPane.showMessageDialog(null, "Your Comment should be between 50-100 characters.", "Error",
                        JOptionPane.ERROR_MESSAGE);
            } else {

                String id = ID.getText();
                String F_Name = FName.getText();
                String L_Name = LName.getText();
                String E_mail = Email.getText();
                String comment = Comment.getText();
                String gen = Gender.getSelectedItem().toString();

                String Username = LoginPage.Username.getText();
                try {

                    Connection con = Connect.getConnection();

                    insert = con.prepareStatement(
                            "insert into feedback (id,FirstName,LastName,Email,Comment,Gender,CreatedBy) values (?,?,?,?,?,?,?)");

                    insert.setString(1, generateCommentCode());
                    insert.setString(2, F_Name);
                    insert.setString(3, L_Name);
                    insert.setString(4, E_mail);
                    insert.setString(5, comment);
                    insert.setString(6, gen);
                    insert.setString(7, Username);

                    insert.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Comment Added!");
                    table_update();

                    ID.setText("");
                    FName.setText("");
                    LName.setText("");
                    Email.setText("");
                    Comment.setText("");
                    Gender.setSelectedIndex(0);
                    generateCommentCode();
                    Save.setEnabled(false);

                } catch (SQLException ex) {
                    java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE,
                            null, ex);
                }
            }
        } else {

            String input1 = ID.getText().trim();
            String input2 = FName.getText().trim();
            String input3 = LName.getText().trim();
            String input4 = Email.getText().trim();
            String input5 = Gender.getSelectedItem().toString().trim();
            String input6 = Comment.getText().trim();

            if (input1.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter ID.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (input2.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Your First Name.", "Error",
                        JOptionPane.ERROR_MESSAGE);
            } else if (input3.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Your Last Name.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (input4.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Your Email.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (input5.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Your Gender.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (input6.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Your Comment.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!((master.getStringLength(input6)) <= 100 && (master.getStringLength(input6)) >= 50)) {
                JOptionPane.showMessageDialog(null, "Your Comment should be between 50-100 characters.", "Error",
                        JOptionPane.ERROR_MESSAGE);
            } else {

                Save.enable(true);

                String id = ID.getText();
                String F_Name = FName.getText();
                String L_Name = LName.getText();
                String E_mail = Email.getText();
                String comment = Comment.getText();
                String gen = Gender.getSelectedItem().toString();

                String Username = LoginPage.Username.getText();
                try {

                    Connection con = Connect.getConnection();

                    insert = con.prepareStatement(
                            "update feedback set FirstName=?,LastName=?,Gender=?,Email=?,Comment=?,createdBy=? where ID=?");

                    insert.setString(1, F_Name);
                    insert.setString(2, L_Name);
                    insert.setString(3, gen);
                    insert.setString(4, E_mail);
                    insert.setString(5, comment);
                    insert.setString(6, Username);
                    insert.setString(7, id);

                    insert.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Comment Updated!");
                    table_update();

                    ID.setText("");
                    FName.setText("");
                    LName.setText("");
                    Email.setText("");
                    Comment.setText("");
                    Gender.setSelectedIndex(0);
                    generateCommentCode();
                    Save.setEnabled(false);

                } catch (SQLException ex) {
                    java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE,
                            null, ex);
                }
            }
        }

    }// GEN-LAST:event_SaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Feedback().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear;
    private javax.swing.JTextArea Comment;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField FName;
    private javax.swing.JComboBox<String> Gender;
    private javax.swing.JTextField ID;
    private javax.swing.JTextField LName;
    private javax.swing.JButton RESULT;
    private javax.swing.JButton Save;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
